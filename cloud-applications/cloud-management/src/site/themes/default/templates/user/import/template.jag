<% jagg.template("user/import", function(inputs, outputs, jagg) { %>

<%
    include('/jagg/constants.jag');
    var cloudConfig = jagg.module("util").getJsonFromFile(CLOUD_MGT_CONFIG_FILE);
    var type = cloudConfig.subscriptions.type;
    var emailValidationPattern = cloudConfig.emailValidationPattern;
    var defaultSubscriptionName = DEFAULT_SUBSCRIPTION_NAME;
%>

<script type="text/javascript">

    function disable() {
        document.getElementById("spinner").style.display = '';
        var submitButton = document.getElementById('btnImport');
        $('#submitbtn').css('background-color','#F9BFBB');
        submitButton.disabled = true;
    }

    function updateMultiSelectRoles() {
        var type = <%=type%>;
        //getting the roles of each subscriptions
        var jsonData = [];
        var blockSubscriptions = getBlockedSubscriptions();
        for(var index in type){
            if(blockSubscriptions.indexOf(type[index].id) <0 || blockSubscriptions==null){
                var tempRoleArray = type[index].roleTypes;
                var tempChildRole = [];
                for (var indexInTemp in tempRoleArray) {
                    tempChildRole.push({
                        "id": tempRoleArray[indexInTemp].roleName,
                        "text": tempRoleArray[indexInTemp].displayRoles
                    });
                }
                jsonData.push({
                    "id": "",
                    "text": type[index].name,
                    "children": tempChildRole
                });
            }
        }
        roleList = jsonData;

        $('#multiSelect').select2({
            multiple: true,
            placeholder: "Select roles",
            data:roleList,
            query: function(options) {
                //checking if the all the roles in the role group is selected
                var selectedIds = options.element.select2('val');
                var data = $.map(this.data, function(group) {
                    var containsAll = true;
                    $.each(group.children, function(i, child) {
                        if (selectedIds.indexOf(child.id) < 0) {
                            containsAll = false;
                            return false;
                        }
                    });
                    return !containsAll ? group : null;
                });
                options.callback({ results: data });
            }
        }).on('select2-selecting', function(e) {
            var $select = $(this);
            //checking if the role group is selected
            if (e.val == "") {
                e.preventDefault();
                $select.select2('data', $select.select2('data').concat(e.object.children));
                $select.select2('close');
            }
        });
    }

    function getBlockedSubscriptions() {
        var blockedSubs;
        jagg.syncPost("../blocks/tenant/users/add/ajax/add.jag", {
            action:"getBlockedSubscriptions"
        },
        function (result) {
            blockedSubs=result;
        });
        return blockedSubs;
    }

    function enable() {
        document.getElementById("spinner").style.display = 'none';
        var submitButton = document.getElementById('btnImport');
        $('#submitbtn').css('background-color','#428BCA');
        submitButton.disabled = false;
    }

    function importUsers(){
        disable();
        var users = document.getElementById("users").value;
        users = users.replace(/ /g, '');   //Remove any whitespace
        var allEmailsValid = validateEmailAddresses(users);
        var allSymbolsValid = validateSymbols(users);
        var isUserAdded = getUsers(users) ;
        var selected = [];
        var roles = "";

        var multiSelectDataArray = $("#multiSelect").select2('data');
        for(var i=0;i<multiSelectDataArray.length;i++){
            var selectedId = multiSelectDataArray[i].id;
            selected.push(selectedId);
            roles = selectedId+","+roles;
        }
        if (allEmailsValid == false) {
            jagg.message({
                content: "Member list contains invalid user name/s. " +
                 "User name should be a valid email of length 3-30 in alphanumeric characters",
                type: 'error',
                id:'emailValidation'
            });
        } else if (allSymbolsValid == false) {
            jagg.message({
                content: "The '+' sign is not currently supported within usernames by the system.",
                type: 'error',
                id:'emailValidation'
            });
        } else if (isUserAdded == true) {
            jagg.message({
                content: "Invited member is already in the system.",
                type: 'error',
                id:'reposBuild'
            });
        } else if (roles == "") {
            jagg.message({
                content: "Atleast one role must be selected from member roles",
                type: 'error',
                id:'reposBuild'
            });
        } else {
            roles = roles.substring(0,(roles.length-1));
            jagg.post("../blocks/tenant/users/add/ajax/add.jag", {
                action: "sendUserInvite",
                users:users,
                roles:roles
            },  function (result) {
                var json = jQuery.parseJSON(result);
                var error =  json.error.toString();
                error = error.replace(/[\r\n]/g, "");
                if(error== "false"){
                    tenantUsers = <%=session.get("tenantUsers")%>;
                    jagg.message({
                        content: "Members invited successfully",
                        type: 'success', id:'importUsersPage'
                    });
                    window.location.replace("<%=jagg.getAbsoluteUrl("/site/pages/user.jag?invitaton=true")%>");
                }else if(error == "true") {
                    var errorMsg = json.message;
                    jagg.message({content:json.message, type:'error',cbk:function(){
                            window.location.href = "index.jag";
                        }
                    });
                }
            }, function (jqXHR, textStatus, errorThrown) {
                tenantUsers = <%=session.get("tenantUsers")%>;
            });
        }
    }

    function getUsers(nameString){
        var names = nameString.split(",");
        var allTenantUsers= <%=session.get("tenantUsers")%>;
        for(var x = 0; x < names.length; x++) {
            for (var i in allTenantUsers) {
                var userEmails = allTenantUsers[i];
                if(userEmails.email == names[x]) {
                    return true;
                }
            }
        }
        return false;
    }

    function validateEmailAddresses(nameString) {
        var names = nameString.split(",");
        var allEmailAddressesMatch = true;
        var pattern = new RegExp(<%= emailValidationPattern %>);
        for(var i = 0; i < names.length; i++) {
            var match = pattern.test(names[i]);
            if(match == false){
                allEmailAddressesMatch = false;
            }
        }
        return allEmailAddressesMatch;
    }
    
    function validateSymbols(nameString) {
        var allSymbolsValid = false;
        if (nameString.indexOf("+") < 0) {
            allSymbolsValid = true;
        }
        return allSymbolsValid;
    }

    function checkIfCommonRole(subscriptionType) {
        var isCommonRole = false;
        var commonSubscription = '<%= defaultSubscriptionName %>';
        if (commonSubscription == subscriptionType) {
            isCommonRole = true;
        }
        return isCommonRole;
    }

    $(document).ready(function(){
        updateMultiSelectRoles();

        $('#saveUserRoles').click(function(){});

        $(".dropdown dt a").on('click', function () {
            $(".dropdown dd ul").slideToggle('fast');
        });

        $(".dropdown dd ul li a").on('click', function () {
            $(".dropdown dd ul").hide();
        });

        function getSelectedValue(value) {
            return $("#" + value).find("dt a span.value").html();
        }

        $(document).bind('click', function (e) {
            var $clicked = $(e.target);
            if (!$clicked.parents().hasClass("dropdown")) $(".dropdown dd ul").hide();
        });

        $('#btnImport').click(function(){
            importUsers();
        });

        $("#checkbox").click(function(){
            if($("#checkbox").is(':checked') ){
                $('#multiSelect').select2("val", "");
                for (var index in roleList) {
                    //Skipping common roles like 'admin'
                    var isCommonRole = checkIfCommonRole(roleList[index].text);
                    if (!isCommonRole) {
                        $('#multiSelect').select2('data', $('#multiSelect').select2('data').concat(roleList[index].children));
                    }
                }
            }else{
                $('#multiSelect').select2("val", "");
            }
        });
    });

</script>


<div class="container content-starter">
    <div class="row">
        <div class="col-lg-12">
            <h1>Invite Members</h1>
            <div class="helper_text" id="helper_text">
                <p>You can invite new team members by giving their email addresses<p>
            </div>
        </div>
    </div>
</div>

<% jagg.includeBlock("page/messages", null); %>

<div class="container content-section-wrapper">
    <div class="row">
        <div class="col-lg-12 content-section">
        <section class="separator">
            <div class="mini_content">
                <div class="form-container" name="#">
                    <form class="right_label hold" onsubmit="return(false)" >
                        <fieldset>

                            <div class="input_row">
                                <label for="users">Member List</label>
                                    <textarea class="full" cols="10" rows="5" name="users" id="users" required></textarea>
                                    <p class="note">Enter comma separated email list to invite multiple members.</p>
                            </div>

                            <div class="input_row">
                                <label>Member Roles</label>
                                <input type="hidden" id="multiSelect" value="" style="width: 380px; padding: 10px;" />
                                <label class="checkbox" style="line-height: 23px;margin-top: 0;width: 100px;float:right">
                                    <input type="checkbox" id="checkbox"/>
                                    Select All
                                </label>
                                <p class="note">Admin role includes all permissions</p>
                            </div>

                            <div class="buttonrow">
                                <button class="btn btn-primary" id="btnImport">Invite Members</button>
                                    <a id="btn_cancel"
                                        href="javascript:location.href='/cloudmgt/site/pages/user.jag'">Cancel</a>
                                    <i class="fa fa-spinner fa-spin fa-4x"
                                        id="spinner" class="spinner" style="display:none; margin-left: 10px;"></i>
                            </div>
                        </fieldset>
                    </form>
                </div>
                <div class="clearfix"></div>
                </div>
            </section>
        </div>
    </div>
</div>
<input type="hidden" id="userName" value='<%= session.get("LOGGED_IN_USER") %>'/>
<%
});
%>
