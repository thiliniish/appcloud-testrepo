<% jagg.template("customurl", function(inputs, outputs, jagg) { %>
<%
    var tenantId = "";
	var tenantDomain =  request.getParameter("tenant");
	if(tenantDomain == null || tenantDomain == ''){
        var userName =  session.get("LOGGED_IN_USER");
        if(userName != null){
            tenantDomain =  userName.substring(userName.lastIndexOf("@")+1);
        }
    }

%>

<script>

    var urlVerification = false;
    function defaultUIView(){
        //Store
        $("#storeModifyBtn").prop("disabled", false);
        $("#storeDomainVerifyBtn").prop("disabled", false);
        $("#storeDomain").prop("disabled", false);
        $("#storeProcessBtn").prop("disabled", true);
        $("#storeUrlChangeArea").css("display","none");

        //Gateway
        $("#gatewayModifyBtn").prop("disabled", false);
        $("#gatewayDomainVerifyBtn").prop("disabled", false);
        $("#gatewayDomain").prop("disabled", false);
        $("#gatewayProcessBtn").prop("disabled", true);
        $("#gatewayUrlChangeArea").css("display","none");
    }

    function showModifyUrlContentArea(node){
        if(node == 'store'){
            $("#storeUrlChangeArea").css("display" , "block");
            $("#storeModifyBtn").prop("disabled", true);
        }
        else{
            $("#gatewayUrlChangeArea").css("display" , "block");
            $("#gatewayModifyBtn").prop("disabled", true);
        }
    }

    function enableSSLFileUpload(node){
        if(node == "store"){
            $("#storeSSLFileUploadLocation").css("display", "block");
            $("#storeDomainVerifyBtn").prop("disabled", true);
            $("#storeDomain").prop("disabled", true);
            $("#storeVerifyUrlNotificationArea").html("<span class='label label-success'>CNAME verified</span>");
            $("#storeProcessBtn").prop("disabled", false);
        }
        else{
            $("#gatewaySSLFileUploadLocation").css("display", "block");
            $("#gatewayDomainVerifyBtn").prop("disabled", true);
            $("#gatewayDomain").prop("disabled", true);
            $("#gatewayVerifyUrlNotificationArea").html("<span class='label label-success'>CNAME verified</span>");
            $("#gatewayProcessBtn").prop("disabled", false);
        }
    }

    /**
    *end of UI functions 
    */

	$(document).ready(function() {
	    defaultUIView();
        getCurrentUserMaping();
	});

    function publishCustomUrl(node){

        if(node == "store"){
            if($("#storeSslFile")[0].files.length == 0 || $("#storeKeyFile")[0].files.length == 0 || $("#storeChainFile")[0].files.length == 0){
                $("#storeVerifyUrlNotificationArea").html("<span class='label label-warning'>Please provide all required ssl files.</span>");
                return false;
            }
        }else{
            if($("#gatewaySslFile")[0].files.length == 0 || $("#gatewayKeyFile")[0].files.length == 0 || $("#gatewayChainFile")[0].files.length == 0){
                $("#gatewayVerifyUrlNotificationArea").html("<span class='label label-warning'>Please provide all required ssl files.</span>");
                return false;
            }
        }

        var formData = new FormData();
        if(node == 'store'){
            formData.append("customDomain", $("#storeDomain").val());
            formData.append("sslFile", $("#storeSslFile")[0].files[0]);
            formData.append("keyFile", $("#storeKeyFile")[0].files[0]);
            formData.append("chainFile", $("#storeChainFile")[0].files[0]);
        }
        else{
            formData.append("customDomain", $("#gatewayDomain").val());
            formData.append("sslFile", $("#gatewaySslFile")[0].files[0]);
            formData.append("keyFile", $("#gatewayKeyFile")[0].files[0]);
            formData.append("chainFile", $("#gatewayChainFile")[0].files[0]);
        }

        formData.append("action", 'publishVal');
        formData.append("node", node);
        formData.append("tenantDomain", "<%=tenantDomain%>");
        formData.append("cloudType", 'api-cloud');
        
        $.ajax({
            url: '../../site/blocks/customurl/ajax/customurl.jag',
            type: "POST",
            data: formData,
            processData: false,
            contentType: false,
            async: false,
            success: function(response) {
                if(response.error != true){
                    if(node == "store"){
                        $("#storeVerifyUrlNotificationArea").html("<span class='label label-success'>Custom-Url mapping have been added successfully</span>");
                    }else{
                        $("#gatewayVerifyUrlNotificationArea").html("<span class='label label-success'>Custom-Url mapping have been added successfully</span>");
                    }
                    getCurrentUserMaping();
                    setTimeout(function(){ defaultUIView() }, 10000);
                }else{
                    if(node == "store"){
                        $("#storeVerifyUrlNotificationArea").html("<span class='label label-error'>Error occurred while adding custom url. Error occurred because "+ response.message +"</span>");
                    }else{
                        $("#gatewayVerifyUrlNotificationArea").html("<span class='label label-error'>Error occurred while adding custom url. Error occurred because "+ response.message +"</span>");
                    }
                }
            },
            error: function(jqXHR, textStatus, errorMessage) {
                if(node == "store"){
                        $("#storeVerifyUrlNotificationArea").html("<span class='label label-error'>Internal Server error occurred.</span>");
                    }else{
                        $("#gatewayVerifyUrlNotificationArea").html("<span class='label label-error'>Internal Server error occured.</span>");
                    }
            }         
        });
    }

    function verifyCustomDomain(node){
        var customUrl = "";
        if(node == 'store'){
            customUrl = $('#storeDomain').val();
        }
        else{
            customUrl = $('#gatewayDomain').val();
        }

        jagg.syncPost('../../site/blocks/customurl/ajax/customurl.jag', {
            action: 'validateUrl',
            cloudType : 'api-cloud',
            customDomain : customUrl
            }, function (result) {
                if (result) {
                    enableSSLFileUpload(node);
                }else{
                    if(node == "store"){
                        $("#storeVerifyUrlNotificationArea").html("<span class='label label-danger'>CNAME verifing failed. Please follow this <a href='#'>doumentation</a> to add new CANME in domain registar.</span>");
                    }else{
                        $("#gatewayVerifyUrlNotificationArea").html("<span class='label label-danger'>CNAME verifing failed. Please follow this <a href='#'>doumentation</a> to add new CANME in domain registar.</span>");
                    }
                }
            }, function (jqXHR, textStatus, errorThrown) {
            
            });
    }

    function getCurrentUserMaping(){
        jagg.syncPost('../../site/blocks/customurl/ajax/customurl.jag', {
            action: 'getCurrentMapping',
            tenantDomain : "<%=tenantDomain%>",
            cloudType : 'api-cloud'
    }, function (result) {
        $("#currentStoreMapping").val(result.store.customUrl);
        $("#currentGatewayMapping").val(result.gateway.customUrl);
    }, function (jqXHR, textStatus, errorThrown) {
    });
    }
</script>
<link href="<%=jagg.getAbsoluteUrl(jagg.getThemeFile('css/styles.css'))%>" rel="stylesheet">
 <div class="container2 padding-double">
     <section class="padding-top-double padding-bottom ">
         <h1 >Custom URL mapping</h1>
         <p>This will serve as the base URL for all your public APIs </p>
     </section><!-- end of Title section-->
    <hr>
    <section class="padding-top-double padding-bottom ">
        <div class="col-x-small inline-block top padding-top">
            <h3 class="uppercase">API Store:</h3>
        </div>
        <div class="col-large inline-block">
            <input type="text" placeholder="Enter URL" id="currentStoreMapping">
            <button class="blue-button" id="storeModifyBtn" onclick="showModifyUrlContentArea('store')"> Modify</button>
            <h4 class="italic light-grey">This is the URL of the website your subscribers will use as their portal</h4>
            <!--== modify section starts here ==-->
            <div class="box" id="storeUrlChangeArea" style="display:none;">
                <div class="col-small inline-block top padding-top">
                    <h2 class="uppercase">New URL:</h2>
                </div>
                <div class="col-medium inline-block">
                    <input type="text" placeholder="Enter URL" name="url" id="storeDomain" autocomplete="off">
                    <button class="blue-button-sm" id="storeDomainVerifyBtn" onclick="verifyCustomDomain('store')">Verify</button>
                    <div id="storeVerifyUrlNotificationArea">
                        <h4 class="italic light-grey"> <b>IMPORTANT:</b> before specifying the new URL here, go to your
                        domain registrarâ€™s DNS panel and add a CNAME record pointing to <%=tenantDomain%>.
                        <span class="blue">Show me how >></span></h4>
                    </div>
                </div>

                <div style="display:none;" id="storeSSLFileUploadLocation">

                    <div class="col-small inline-block top padding-top margin-top-double margin-bottom-double">
                        <h2 class="uppercase">SSL certificate:</h2>
                    </div>

                    <div class="col-medium inline-block margin-top-double margin-bottom">
                        <div class="custom-file-upload">
                            <input type="file" id="storeSslFile" name="myfiles[]" autocomplete="off" multiple />
                        </div>
                        <div class="float-left">
                            <h2>Note : </h2><br>
                            <ul>
                                <li>SSL file should be in PEM format.</li>
                                <li>Public key shouldn't be embeded in ssl file.</li>
                                <li>SSL file shouldn't be self-signed.</li>
                            </ul>
                        </div >    
                    </div>

                    <div class="col-small inline-block top padding-top margin-top-double margin-bottom-double">
                        <h2 class="uppercase">SSL key file:</h2>
                    </div>
                    <div class="col-medium inline-block margin-top-double margin-bottom-double">
                        <div class="custom-file-upload">
                            <input type="file" id="storeKeyFile" name="myfiles[]" autocomplete="off" multiple />
                        </div>
                    </div>
                    <div class="col-small inline-block top padding-top margin-top-double margin-bottom-double">
                        <h2 class="uppercase">Chain file:</h2>
                    </div>
                    <div class="col-medium inline-block margin-top-double margin-bottom-double">
                        <div class="custom-file-upload">
                            <input type="file" id="storeChainFile" name="myfiles[]" autocomplete="off" multiple />
                        </div>
                        <div class="float-left">
                            <h2>Note : </h2><br>
                            <ul>
                                <li>Public key should be encrypt in RSA format.</li>
                            </ul>
                        </div>
                    </div>
                </div>

                <div class="right">
                    <button class="uppercase grey-button margin-right" onclick="defaultUIView()">Cancel</button>
                    <button class="uppercase blue-button margin-right" id="storeProcessBtn" onclick="publishCustomUrl('store');">Proceed</button>
                </div>

            </div>
            <!--==  modify section ends here ==-->
        </div>
    </section><!-- End of content section-->

    <section class="padding-top-double padding-bottom-double ">
        <div class="col-x-small inline-block top padding-top">
            <h3 class="uppercase">Gateway:</h3>
        </div>
        <div class="col-large inline-block">
            <input type="text" placeholder="Enter URL" id="currentGatewayMapping">
            <button class="blue-button" id="gatewayModifyBtn" onclick="showModifyUrlContentArea('gateway')">Modify</button>
            <h4 class="italic light-grey">This is the URL of the website your subscribers will use as their portal</h4>
            <!--== modify section starts here ==-->
            <div class="box" id="gatewayUrlChangeArea" style="display:none;">
                <div class="col-small inline-block top padding-top">
                    <h2 class="uppercase">New URL:</h2>
                </div>
                <div class="col-medium inline-block">
                    <input type="text" placeholder="Enter URL" name="url" id="gatewayDomain" autocomplete="off" />
                    <button class="blue-button-sm" id="gatewayDomainVerifyBtn" onclick="verifyCustomDomain('gateway')">Verify</button>
                    <div id="gatewayVerifyUrlNotificationArea">
                        <h4 class="italic light-grey"> <b>IMPORTANT:</b> before specifying the new URL here, go to your
                        domain registrarâ€™s DNS panel and add a CNAME record pointing to <%=tenantDomain%>.
                        <span class="blue">Show me how >></span></h4>
                    </div>
                </div>

                <div style="display:none;" id="gatewaySSLFileUploadLocation">

                <div class="col-small inline-block top padding-top margin-top-double margin-bottom-double">
                    <h2 class="uppercase">SSL certificate:</h2>
                </div>



                <div class="col-medium inline-block margin-top-double margin-bottom">
                    <div class="custom-file-upload">
                        <input type="file" id="gatewaySslFile" name="myfiles[]" autocomplete="off" multiple />
                    </div>
                     <div class="float-left">
                        <h2>Note : </h2><br>
                        <ul>
                            <li>SSL file should be in PEM format.</li>
                            <li>Public key shouldn't be embeded in ssl file.</li>
                            <li>SSL file shouldn't be self-signed.</li>
                        </ul>
                    </div >   
                </div>

                <div class="col-small inline-block top padding-top margin-top-double margin-bottom-double">
                    <h2 class="uppercase">SSL key file:</h2>
                </div>
                <div class="col-medium inline-block margin-top-double margin-bottom-double">
                    <div class="custom-file-upload">
                        <input type="file" id="gatewayKeyFile" name="myfiles[]" autocomplete="off" multiple />
                    </div>
                </div>
                <div class="col-small inline-block top padding-top margin-top-double margin-bottom-double">
                    <h2 class="uppercase">Chain file:</h2>
                </div>
                <div class="col-medium inline-block margin-top-double margin-bottom-double">
                    <div class="custom-file-upload">
                        <input type="file" id="gatewayChainFile" name="myfiles[]" autocomplete="off" multiple />
                    </div>
                    <div class="float-left">
                        <h2>Note : </h2><br>
                        <ul>
                            <li>Public key should be encrypt in RSA format.</li>
                        </ul>
                    </div>
                </div>

                </div>
                <div class="right">
                    <button class="uppercase grey-button margin-right" onclick="defaultUIView()">Cancel</button>
                    <button class="uppercase blue-button margin-right " id="gatewayProcessBtn" onclick="publishCustomUrl('gateway')">Proceed</button>
                </div>

            </div>
            <!--==  modify section ends here ==-->
        </div>

    </section><!-- End of content section-->




</div><!-- end of Container -->

<script type="text/javascript" src="<%=jagg.getAbsoluteUrl(jagg.getThemeFile('js/file-event.js'))%>"></script>
<% }); %>