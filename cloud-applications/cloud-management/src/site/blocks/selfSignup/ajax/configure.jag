<%
include("/jagg/jagg.jag");
include("/jagg/constants.jag");
include("/jagg/config_reader.jag");
(function () {
    var statusMessage = "error";
    var action = request.getParameter("action");
    var userName = request.getParameter("userName"),
    var site = require("/site/conf/site.json");
    var log = new Log("site/blocks/selfSignup/ajax/configure.jag");

    if (action == "checkSignUpConfiguredForUser") {


        var isSignUpConfigured = jagg.module("registry").checkSignupConfiguredInRegistry(userName);

        if (isSignUpConfigured == true || isSignUpConfigured.trim() == "true") {
            statusMessage = "configured";

        }
        else if (isSignUpConfigured == false || isSignUpConfigured.trim() == "false") {
            log.debug("Since the sign up is not configured, adding the files to the BPS Server for the user " + userName);
            var tenantEmail;
            try {
                var carbon = require('carbon');
                var server = carbon.server;
                var utilModule = jagg.module("util");
                var cloudConfig = utilModule.getJsonFromFile(CLOUD_MGT_CONFIG_FILE);
                var BPSURL = cloudConfig.ServerUrls.bps.toString();
                var cookie = jagg.module("manager").getAdminCookieBySAMLToken(BPSURL);

                //calling the service to upload the files to the BPS server
                result = server.osgiService('org.wso2.carbon.cloud.signup.workflow.fileUploader.bpsFileUplader.BPSFileUploader').bpsFileUploader(userName, cookie);

                //Sending an email to the cloud team to inform the sign up of the user.
                tenantEmail = String(session.get("LOGGED_IN_USER_EMAIL"));
                var tenantDomain = (session.get("TENANT_INFO")).tenantDomain;
                var body = utilModule.getObjFromFile("/site/conf/emails/self_signup_feature_enabled_notification_email.txt");

                body = body.replace("$tenant", tenantEmail).replace("$tenantDomain", tenantDomain);
                var subject = cloudConfig.subscriberAccessEnabledEmail.subject;
                var recepient = cloudConfig.subscriberAccessEnabledEmail.cloudEmail;
                utilModule.sendEmail(body, subject, recepient);

                if (log.isDebugEnabled()) {
                    log.debug("Notification sent to the cloud team regarding the tenant " + userName + " enabling the self sign up feature for the tenant store " + tenantDomain);
                }
                log.info("Completed the uploading process for the user " + userName);
                statusMessage = "uploadCompleted"
            }
            catch (e) {
                log.error("Error while uploading the files to the BPS server for the self sign up feature of the tenant " + tenantEmail + "\n" + e.message);
                throw Error(e);
            }
        }
        else if (isSignUpConfigured.trim() == "resourcePending") {
            statusMessage = "resourcePending";
        }
        else {
            statusMessage = "error";
        }
    }

    else {
        log.error("No action specified");
    }
    print(statusMessage);

}());
%>
