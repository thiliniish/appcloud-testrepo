<%
include("/jagg/jagg.jag");
include("/jagg/constants.jag");
(function () {

    var loginStatus = jagg.isUserLoggedIn();
    if (loginStatus.error) {
        response.status = 401;
        print(loginStatus);
        return;
    }

    var action = request.getParameter("action");
    var username = request.getParameter("username");
    var fromAddress = request.getParameter("fromAddress");
    var userPassword = request.getParameter("userPassword");
    var contactEmail = request.getParameter("contactEmail");
    var notifyAllAdmins = request.getParameter("notifyAllAdmins");
    var signupType = request.getParameter("signupType");
    var site = require("/site/conf/site.json");
    var log = new Log("site.blocks.selfSignup.ajax.configure.jag");

    //Method to check if the self sign up feature has been configured for the user.
    if (action == "checkSignUpConfiguredForUser") {
        var isSignUpConfiguredResult = jagg.module("selfSignup").checkSignupConfiguredInRegistry(username);
        var message = "Error while checking if self sign-up has been configured for the user " + username;
        var statusMessage = "error";
        var result = {
            error: true,
            message: message,
            response: statusMessage,
            statusCode: 500
        }
        if (isSignUpConfiguredResult.signUpConfigured == true || "true".equals(isSignUpConfiguredResult.signUpConfigured.trim())) {
            message = "self sign-up has been successfully configured for the user " + username;
            statusMessage = "configured";
            result = {
                error: false,
                message: message,
                response: statusMessage,
                statusCode: 200
            }
        } else if (isSignUpConfiguredResult.signUpConfigured == false || "false".equals(isSignUpConfiguredResult.signUpConfigured.trim())) {

            if (log.isDebugEnabled()) {
                log.debug("Since the sign up is not configured, adding the files to the BPS Server for the user " + username);
            }
            var tenantEmail;
            try {
                var carbon = require('carbon');
                var server = carbon.server;
                var utilModule = jagg.module("util");
                var cloudConfig = utilModule.getJsonFromFile(CLOUD_MGT_CONFIG_FILE);
                var BPSURL = cloudConfig.selfSignUpProperties.ServerUrls.bpsServerURL;
                var cookieResponse = jagg.module("manager").getAdminCookieBySAMLToken(BPSURL);
                if (!cookieResponse.error) {
                    var cookie = cookieResponse.cookie;
                    //calling the service to upload the files to the BPS server
                    result = server.osgiService('org.wso2.carbon.cloud.signup.workflow.fileUploader.bpsFileUploader.BPSFileUploader').bpsFileUploader(username, cookie);
                    if (result) {

                        //Sending an email to the cloud team to inform the enabling of the self sign up feature of the tenant's API Store.
                        tenantEmail = String(session.get("LOGGED_IN_USER_EMAIL"));
                        var tenantDomain = jagg.module("manager").getTenantDomain();
                        //populating the registry files needed for the self sign-up workflow.
                        var statusResult = jagg.module("selfSignup").populateRegistryFiles(fromAddress, contactEmail,
                                                                                           userPassword, username, tenantDomain, notifyAllAdmins, signupType);
                        var body = utilModule.getObjFromFile("/site/conf/emails/self_signup_feature_enabled_notification_email.txt");
                        body = body.replace("$tenant", tenantEmail).replace("$tenantDomain", tenantDomain);
                        var subject = cloudConfig.selfSignUpProperties.subscriberAccessEnabledEmail.subject;
                        var recepient = cloudConfig.selfSignUpProperties.subscriberAccessEnabledEmail.cloudEmail;
                        utilModule.sendEmail(body, subject, recepient);

                        if (log.isDebugEnabled()) {
                            log.debug("Notification sent to the cloud team regarding the user " + username + " enabling the self sign up feature for the tenant store " + tenantDomain);
                        }
                        message = "Completed the uploading process for the user " + username;

                        //Adding the submission to Mail Campaign to trigger the feature activation email to the user after 15 mins.
                        jagg.module("selfSignup").addSelfSignupSubmissionToMailCampaign(tenantEmail);
                        log.info(message);
                        result = {
                            error: false,
                            message: message,
                            response: statusResult.registryUpdateResult,
                            statusCode: 200
                        }
                    } else {
                        message = "Error while uploading the files to the BPS server for the self sign up feature for the user " + username + " Since the cookie is invalid";
                        log.error(message);
                        result = {
                            error: true,
                            message: message,
                            response: statusMessage,
                            statusCode: 500
                        }
                    }
                } else {
                    if (cookieResponse.cookie == null) {
                        if (cookieResponse.statusCode == 401) {
                            result = {
                                error: true,
                                message: cookieResponse.message,
                                response: "unauthenticatedSession",
                                statusCode: 401
                            }
                        } else if (cookieResponse.statusCode == 400) {
                            result = {
                                error: true,
                                message: cookieResponse.message,
                                response: "invalidCookie",
                                statusCode: 400
                            }
                        } else {
                            result = {
                                error: true,
                                message: cookieResponse.message,
                                response: "error",
                                statusCode: 500
                            }
                        }

                    }
                }
            } catch (e) {
                message = "An error occurred while configuring the self sign up feature for the user " + username + "\n" + e.message;
                log.error(message);
                log.error(e);
                result = {
                    error: true,
                    message: message,
                    response: statusMessage,
                    statusCode: 500
                }

            }
        } else if ("resourcePending".equals(isSignUpConfigured.response.trim())) {
            message = "The resource is not available for the user " + username;
            statusMessage = "resourcePending";
            result = {
                error: true,
                message: message,
                response: statusMessage,
                statusCode: 404
            }
        }
    } else {
        log.error("No action specified");
    }
    print(result);
}());
%>
