<%
include("/jagg/jagg.jag");
include("/jagg/constants.jag");
var log = new Log();
(function () {

    var loginStatus = jagg.isUserLoggedIn();
    if (loginStatus.error) {
        response.status = 401;
        print(loginStatus);
        return;
    }

	var mod, obj, result,
	action = request.getParameter("action"),
	site = require("/site/conf/site.json");
	mod = jagg.module("tenant");

	if (action == "getOrganizations") {
		try {
			var result = mod.getOrganizations();
			if(result != null ) {
				print(result);
			} else {
				throw "Error while getting user organizations";
			}
		} catch (e) {
			throw "Error while getting user organizations";
		}
    } else if (action == "getOrgDisplayName") {
        var tenantDomain = request.getParameter("tenant");
        var responseContent;
        if (!tenantDomain) {
            responseContent = {"error": true, "message": "Required parameter tenant domain is not provided"};
        } else {
            try {
                var mod = jagg.module("util");
                //tenant aware username
                var username = session.get("LOGGED_IN_USER");
                //only carbon super admin user can access this api
                if (!mod.isCarbonSuperAdmin(username)) {
                    responseContent =
                    {"error": true, "message": "User does not have enough privilege to access this API"};
                    response.status = 403;
                } else {
                    var organizationDisplayName = mod.getTenantDisplayName(tenantDomain);
                    responseContent = {"error": false, "name": organizationDisplayName};
                }
            } catch (e) {
                var errorMsg = "Error while getting organization display name";
                log.error(errorMsg + " for tenant : " + tenantDomain);
                log.error(e);
                responseContent = {"error": true, "message": "Error while getting organization display name"};
                response.status = 500;
            }
        }
        response.contentType = APPLICATION_JSON;
        response.content = responseContent;
    } else {
		throw new Error("No action specified");
	}

}());
%>
