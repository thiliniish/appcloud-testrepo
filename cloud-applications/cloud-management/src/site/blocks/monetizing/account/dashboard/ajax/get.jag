<%
include("/jagg/jagg.jag");
include("/jagg/constants.jag");
var log = new Log("site.blocks.monetizing.account.info.ajax.get");
var carbon = require('carbon');
var server = carbon.server;
var mod = jagg.module("monetizing");
var encoder = Packages.org.wso2.carbon.ui.util.CharacterEncoder;
var cloudConfig = jagg.module("util").getJsonFromFile(CLOUD_MGT_CONFIG_FILE);
var cloudmgtURI = cloudConfig.ServerUrls.cloudmgt.toString();
var contactUsURL = cloudmgtURI + CLOUD_CONTACT_US_URI;
var multiTenantUtils = Packages.org.wso2.carbon.utils.multitenancy.MultitenantUtils;
var user = jagg.getUser();
var tenantDomain = multiTenantUtils.getTenantDomain(user)
if (user == null || tenantDomain == null) {
    response.status = 401;
    print({
        error: true,
        status: 401,
        message: "Unauthorized. Login required."
    });
}

if (!jagg.module("util").isUserInAdminRole()) {
    response.status = 401;
    print({
        error: true,
        status: 401,
        message: "User does not have permission to perform the requested operation"
    });
}

var isMonetizationEnabledObj = jagg.module("monetizing").isMonetizationEnabled(tenantDomain);
if (isMonetizationEnabledObj == null || isMonetizationEnabledObj.error || !isMonetizationEnabledObj.monetizationEnabled) {
    response.status = 403;
    print({
        error: true,
        status: 403,
        message: "Monetization feature is not available for the organization."
    });
}

(function () {
    var action = encoder.getSafeText(request.getParameter("action"));
    if (action == "get-product-plan-count") {
        var result = mod.getNumberOfProductPlansForTenant(tenantDomain);
        print(result);
    } else {
        var message = "No Action Specified";
        log.error(message);
        response.status = 400;
        print({
                  error: true,
                  statusCode: 400,
                  redirectionURL: contactUsURL,
                  message: message
              });
    }

}());

%>