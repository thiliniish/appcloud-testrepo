<%
include("/jagg/jagg.jag");
include("/jagg/constants.jag");
(function () {

    var loginStatus = jagg.isUserLoggedIn();
    if (loginStatus.error) {
        response.status = 401;
        print(loginStatus);
    }
    var tenantDomain;
    var encoder = Packages.org.wso2.carbon.ui.util.CharacterEncoder;
    var multiTenantUtils = Packages.org.wso2.carbon.utils.multitenancy.MultitenantUtils;
    var user = jagg.getUser();
    var cloudConfig = jagg.module("util").getJsonFromFile(CLOUD_MGT_CONFIG_FILE);
    var cloudmgtURI = cloudConfig.ServerUrls.cloudmgt.toString();
    var contactUsURL = cloudmgtURI + CLOUD_CONTACT_US_URI;
    if (user == null || (tenantDomain = multiTenantUtils.getTenantDomain(user)) == null) {
        response.status = 401;
        print({
            error: true,
            status: 401,
            message: "Unauthorized. Login required."
        });
    }
    if (!jagg.module("util").isUserInAdminRole()) {
        response.status = 401;
        print({
            error: true,
            status: 401,
            message: "User does not have necessary  permission to perform the requested operation."
        });
    }
    var isMonetizationEnabledObj = jagg.module("monetizing").isMonetizationEnabled(tenantDomain);
    if (isMonetizationEnabledObj == null || isMonetizationEnabledObj.error || !isMonetizationEnabledObj.monetizationEnabled) {
        response.status = 403;
        print({
            error: true,
            status: 403,
            message: "Feature not available for the organization."
        });
    }
    var mod = jagg.module("monetizing");
    var action = encoder.getSafeText(request.getParameter("action"));
    var planName = encoder.getSafeText(request.getParameter("planName"));
    var pricing = encoder.getSafeText(request.getParameter("pricing"));
    var planDescription = encoder.getSafeText(request.getParameter("planDescription"));
    var overageCharge = encoder.getSafeText(request.getParameter("overageCharge"));
    var dailyUsage = encoder.getSafeText(request.getParameter("dailyUsage"));
    var overageLimit = encoder.getSafeText(request.getParameter("overageLimit"));
    if (action == "add-payment-plans-of-tenant") {
        var result = mod.addProductRatePlan(planName, planDescription, pricing, overageCharge, overageLimit, dailyUsage);
        print(result);

    } else {
        var msg = "Invalid action: " + action;
        response.status = 400;
        print({
            error: true,
            message: msg,
            redirectionURL: contactUsURL,
            status: 400
        });
    }
}());
%>
