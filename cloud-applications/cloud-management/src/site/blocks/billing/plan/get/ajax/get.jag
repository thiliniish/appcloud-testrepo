<%
include("/jagg/jagg.jag");
include("/jagg/constants.jag");
include("/jagg/config_reader.jag");

var log = new Log("site/blocks/billing/plan/get/ajax/get.jag");
var mod = jagg.module("billing");

var createAccount = function (serviceId){
    var productRatePlanId = request.getParameter("productRatePlanId");
    var currRatePlan = request.getParameter("currRatePlan");
    var accounts = request.getParameter("accounts");
    var callsPerDay = request.getParameter("callsPerDay");
    var callsAbovePlan = request.getParameter("callsAbovePlan");
    var monthlyRental = request.getParameter("monthlyRental");
    var couponData = request.getParameter("couponData");
    var isFromChangePlan = request.getParameter("isFromChangePlan");
    session.put("PRODUCT_PLAN_ID",productRatePlanId);
    var accountId =  mod.getAccountId();
    var couponId = mod.getCouponProductRatePlanId(couponData,serviceId);

	// Getting actual payment amount
	var ratePlans = session.get("RATE_PLANS");
	var actualPaymentAmount = null;
	if (isFromChangePlan == "true") {
		actualPaymentAmount = mod.getActualPaymentAmount(accountId, productRatePlanId, ratePlans, serviceId, couponData);
	}

    if((couponData != "" && couponData != "null" && couponData != null) && (couponId == null)){
    	log.error("Given Coupon " + couponData +" is invalid for : " + accountId);
    	print ("Given Coupon " + couponData +" is invalid." );
    }
    else {
	    if (accountId == null || accountId =='null' || isFromChangePlan != null || isFromChangePlan != 'null') {
	        session.put("PRODUCT_PLAN_ID", productRatePlanId);
	        session.put("PRODUCT_COUPON_DATA", couponData);
	        session.put("CURRENT_RATE_PLAN", currRatePlan);
	        session.put("ACCOUNTS", accounts);
	        session.put("CALLS_PER_DAY", callsPerDay);
	        session.put("CALLS_ABOVE_PLAN", callsAbovePlan);
	        session.put("MONTHLY_RENTAL", monthlyRental);
	        session.put("ACCOUNT_ID", accountId);
			if (actualPaymentAmount != null) {
				session.put("ACTUAL_PAYMENT_AMOUNT", actualPaymentAmount["amount"]);
			} else {
				session.put("ACTUAL_PAYMENT_AMOUNT", monthlyRental);
			}
	        if(isFromChangePlan == 'true') {
	        	print("add-billing-account.jag?isFromChangePlan=" + isFromChangePlan);
	        } else {
	            print("add-payment-method.jag");
	        }
	    } else {
	        if (log.isDebugEnabled()){
	            log.debug("in gotToCreateAccount for account id  "+ accountId);
	        }
	        
	       	 var ratePlans = session.get("RATE_PLANS");
	     	 var response = mod.changeSubscriptionPlan(accountId, productRatePlanId, ratePlans, serviceId, couponData);
	      	 print(response);
	        
	    }
    }
};

(function () {
	var result,
	action = request.getParameter("action"),
	site = require("/site/conf/site.json");

	var tenantDomain = (session.get("TENANT_INFO")).tenantDomain;
    var serviceId = session.get("SERVICE_ID");
	if (action == "getRatePlans") {
		try {
			result = mod.getRatePlans(serviceId);
			if (result != null) {
				print(result);
			} else {
				log.error("Error while getting subscription rate plan for  " + tenantDomain);
				throw new Error("Error while getting subscription rate plan " + tenantDomain);
			}
		} catch (e) {
			throw new Error("Error while getting  subscription rate plan  for "+tenantDomain + e);
		}
	} else if (action == "goToCreateAccount") {
	    if(session.get("COUPON_DISCOUNT") != null) {
            session.remove("COUPON_DISCOUNT");
        }
        var accountStatus = jagg.module("billing").getAccountStatus(serviceId,"PAID");
        if (accountStatus[0] != null && accountStatus[0] != "undefined") {
            if (accountStatus[0]["STATUS"] === "PENDING_DISABLE" || accountStatus[0]["STATUS"] === "DISABLED"){
                print("Your subscription cancellation is in effect. If you want to resubscribe please contact support. ");
            } else {
                createAccount(serviceId);
            }
        }
        else {
            createAccount(serviceId);
        }
    } else{
        throw new Error("No action specified");
    }
}());
%>
