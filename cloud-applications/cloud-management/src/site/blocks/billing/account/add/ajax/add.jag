<%
include("/jagg/jagg.jag");
include("/jagg/constants.jag");

var log = new Log("site/block/account/billing/add/ajax/add.jag");
var serviceId = session.get("SERVICE_ID");
var ratePlans = session.get("RATE_PLANS");
//var accountId = request.getParameter("accountId");
(function () {

    var loginStatus = jagg.isUserLoggedIn();
    if (loginStatus.error) {
        response.status = 401;
        print(loginStatus);
        return;
    }

	var mod,result,
	action = request.getParameter("action"),
	site = require("/site/conf/site.json");
	mod = jagg.module("billing");
	var organizationName;

	if (action == "createAccount") {
		var accountData = {
		};
		var metaData = {
		};

		organizationName = request.getParameter("orgName");
		accountData.line1 = request.getParameter("address1");
		accountData.city = request.getParameter("city");
		accountData.postal_code = request.getParameter("zipCode");
		accountData.country = request.getParameter("country");

		metaData.workEmail = request.getParameter("email");
		metaData.field_passthrough4 = request.getParameter("field_passthrough4");
		metaData.firstName = request.getParameter("firstName");
		metaData.lastName = request.getParameter("lastName");
		metaData.refId = request.getParameter("refId");
		metaData.signature = request.getParameter("signature");
		metaData.field_passthrough1 = request.getParameter("field_passthrough1");
		metaData.serviceId = request.getParameter("serviceId");
		metaData.productRatePlanId = request.getParameter("productRatePlanId");
		responseFrom = request.getParameter("responseFrom");
		isFirstSubscription = request.getParameter("isFirstSubscription");
		try {
			if(responseFrom == EDIT_USER_INFO){

				result = mod.updateContactInfo(organizationName, accountData, metaData);

			} else if(responseFrom == IS_FROM_CHANGE_PLAN && isFirstSubscription == 'false') {
	       	    var serviceId = session.get("SERVICE_ID");
	       	    var couponData = session.get("PRODUCT_COUPON_DATA");
	       	    var productRatePlanId = session.get("PRODUCT_PLAN_ID");
				var accountId = mod.getAccountId();
				result = mod.changeSubscriptionPlan(accountId, productRatePlanId, ratePlans, serviceId, couponData);
			} else {
				result = mod.createAccount(accountData, metaData, organizationName);
			}

			if (result != null) {
				print(result);
			} else {
				var tenantDomain = (session.get("TENANT_INFO")).tenantDomain;

				log.error("Created account Id cannot be null for tenant: " + tenantDomain);
				throw new Error("Created account Id cannot be null for tenant: " + tenantDomain);
			}
		} catch (e) {
			if(EDIT_USER_INFO == responseFrom){
				throw new Error("Error while updating contact info: " + e);
			}if(IS_FROM_CHANGE_PLAN == responseFrom){
				throw new Error("Error while changing billing account: " + e);
			}else {
			    throw new Error("Billing account creation failure: " + e);
			}
		}
	} else if (action == "calculateDiscount") {
		var couponData = request.getParameter("couponData");
		try {
			session.put("PRODUCT_COUPON_DATA", couponData);
			var serviceId = session.get("SERVICE_ID");
			var accountId = session.get("ACCOUNT_ID");
			var productRatePlanId = session.get("PRODUCT_PLAN_ID");
			result = 0;
			// Check the coupon validity
			if (mod.isValidCoupon(couponData, serviceId)) {
				//TO DO we should consider calculating the prorated data.
					result = mod.calculateDiscountForCoupon(couponData);
					session.put("COUPON_DISCOUNT", result);
			}
			if (log.isDebugEnabled()) {
				log.debug("Coupon discount result = " + result);
			}
			print(result);
		} catch (e) {
			log.error("Billing account discount preview failure for coupon " + couponData + " : " + e.message);
			log.error(e);
			throw e;
		}
	} else {
		throw new Error("No action specified");
	}
}());
%>
