<%
include("/jagg/jagg.jag");
include("/jagg/constants.jag");
include("/jagg/config_reader.jag");

var log = new Log("site/block/account/billing/add/ajax/add.jag");
var serviceId = session.get("SERVICE_ID");
var ratePlans = session.get("RATE_PLANS");
//var accountId = request.getParameter("accountId");
(function () {
	var mod,result,
	action = request.getParameter("action"),
	site = require("/site/conf/site.json");
	mod = jagg.module("billing");

	if (action == "createAccount") {
		var accountData = {
		};
		var metaData = {
		};

		accountData.firstName = request.getParameter("firstName");
		accountData.lastName = request.getParameter("lastName");
		accountData.address1 = request.getParameter("address1");
		accountData.address2 = request.getParameter("address2");
		accountData.city = request.getParameter("city");
		accountData.state = request.getParameter("state");
		accountData.zipCode = request.getParameter("zipCode");
		accountData.country = request.getParameter("country");
        accountData.workEmail = request.getParameter("email");

		metaData.refId = request.getParameter("refId");
		metaData.signature = request.getParameter("signature");
		metaData.field_passthrough1 = request.getParameter("field_passthrough1");
		metaData.serviceId = request.getParameter("serviceId");
		metaData.productRatePlanId = request.getParameter("productRatePlanId");
		responseFrom = request.getParameter("responseFrom");
		try {
			if(responseFrom == EDIT_USER_INFO){
				result = mod.updateContactInfo(accountData);
			} else if(responseFrom == IS_FROM_CHANGE_PLAN) {

	       	    var serviceId = session.get("SERVICE_ID");
	       	    var couponData = session.get("PRODUCT_COUPON_DATA");
	       	    var accountId = session.get("ACCOUNT_ID");
	       	    session.remove("ACCOUNT_ID");
	       	    var productRatePlanId = session.get("PRODUCT_PLAN_ID");
	     	    result = mod.changeSubscriptionPlan(accountId, productRatePlanId, ratePlans, serviceId, couponData);
			} else {
				result = mod.createAccount(accountData, metaData);
			}
			
			if (result != null) {
				print(result);
			} else {
				var tenantDomain = (session.get("TENANT_INFO")).tenantDomain;

				log.error("Created zuora account Id cannot be null for tenant: " + tenantDomain);
				throw new Error("Created zuora account Id cannot be null for tenant: " + tenantDomain);
			}
		} catch (e) {
			if(EDIT_USER_INFO == responseFrom){
				throw new Error("Error while updating contact info: " + e);
			}if(IS_FROM_CHANGE_PLAN == responseFrom){
				throw new Error("Error while changing billing account: " + e);
			}else {
			    throw new Error("Billing account creation failure: " + e);
			}
		}
	} else if(action == "calculateDiscount") {
            var couponData = request.getParameter("couponData");
            var serviceId = request.getParameter("serviceId");
           // var premium = request.getParameter("premium");
		try {
            session.put("PRODUCT_COUPON_DATA", couponData);
			result = mod.calculateDiscountForCoupon(couponData, serviceId);
			log.info("calculating discount result = " + result);
			print(result);
		} catch (e) {
			throw new Error("Billing account calculating discount failure: ");
			throw new Error(e);
		}
	} else {
		throw new Error("No action specified");
	}
}());
%>