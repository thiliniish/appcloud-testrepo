<%
jagg.module("billing", {
    createAccount: function () {
        return jagg.require(jagg.getModulesDir() + "billing/billing.jag").createAccount.apply(this, arguments);
    },
    getRatePlans: function () {
        return jagg.require(jagg.getModulesDir() + "billing/billing.jag").getRatePlans.apply(this, arguments);
    },
    isPaidAccount: function () {
        return jagg.require(jagg.getModulesDir() + "billing/billing.jag").isPaidAccount.apply(this, arguments);
    },
    cancelSubscription: function () {
        return jagg.require(jagg.getModulesDir() + "billing/billing.jag").cancelSubscription.apply(this, arguments);
    },
    getCurrentRatePlan: function () {
        return jagg.require(jagg.getModulesDir() + "billing/billing.jag").getCurrentRatePlan.apply(this, arguments);
    },
    getAccountId: function () {
        return jagg.require(jagg.getModulesDir() + "billing/billing.jag").getAccountId.apply(this, arguments);
    },
    changeSubscriptionPlan: function () {
        return jagg.require(jagg.getModulesDir() + "billing/billing.jag").changeSubscriptionPlan.apply(this, arguments);
    },
    addTenantToBilling: function () {
        return jagg.require(jagg.getModulesDir() + "billing/billing.jag").addTenantToBilling.apply(this, arguments);
    },
    getAccountStatus: function () {
        return jagg.require(jagg.getModulesDir() + "billing/billing.jag").getAccountStatus.apply(this, arguments);
    },
    validateServiceId: function () {
        return jagg.require(jagg.getModulesDir() + "billing/billing.jag").validateServiceId.apply(this, arguments);
    },
    extendTrial: function () {
        return jagg.require(jagg.getModulesDir() + "billing/billing.jag").extendTrial.apply(this, arguments);
    },
    addCloudSubmissionToMailCampaign: function () {
        return jagg.require(jagg.getModulesDir() + "billing/billing.jag").addCloudSubmissionToMailCampaign.apply(this, arguments);
    },
    getBillingInvoiceData: function () {
        return jagg.require(jagg.getModulesDir() + "billing/billing.jag").getBillingInvoiceData.apply(this, arguments);
    },
    getCancelSubscriptionEffectiveDate: function () {
        return jagg.require(jagg.getModulesDir() + "billing/billing.jag").getCancelSubscriptionEffectiveDate.apply(this, arguments);
    },
    updateContactInfo: function () {
        return jagg.require(jagg.getModulesDir() + "billing/billing.jag").updateContactInfo.apply(this, arguments);
    },
    getPaymentPlanFromId: function () {
        return jagg.require(jagg.getModulesDir() + "billing/billing.jag").getPaymentPlanFromId.apply(this, arguments);
    },
    calculateDiscountForCoupon: function () {
        return jagg.require(jagg.getModulesDir() + "billing/billing.jag").calculateDiscountForCoupon.apply(this, arguments);
    },
    isPlanUpgrade: function () {
        return jagg.require(jagg.getModulesDir() + "billing/billing.jag").isPlanUpgrade.apply(this, arguments);
    },
    notifyMailCampaignForUnfinishedUpgrades: function () {
        return jagg.require(jagg.getModulesDir() + "billing/billing.jag").notifyMailCampaignForUnfinishedUpgrades.apply(this, arguments);
    },
    getCloudURL: function () {
        return jagg.require(jagg.getModulesDir() + "billing/billing.jag").getCloudURL.apply(this, arguments);
    },
    isValidCoupon: function () {
        return jagg.require(jagg.getModulesDir() + "billing/billing.jag").isValidCoupon.apply(this, arguments);
    },
    getCurrencyUsed: function () {
        return jagg.require(jagg.getModulesDir() + "billing/billing.jag").getCurrencyUsed.apply(this, arguments);
    },
    isBillingEnabled: function () {
        return jagg.require(jagg.getModulesDir() + "billing/billing.jag").isBillingEnabled.apply(this, arguments);
    },
    getPublicKeyParams: function () {
        return jagg.require(jagg.getModulesDir() + "billing/billing.jag").getPublicKeyParams.apply(this, arguments);
    },
    getAccountInfo: function () {
        return jagg.require(jagg.getModulesDir() + "billing/billing.jag").getAccountInfo.apply(this, arguments);
    },
    getTrialPeriod: function () {
        return jagg.require(jagg.getModulesDir() + "billing/billing.jag").getTrialPeriod.apply(this, arguments);
    },
    addPaymentMethod: function () {
        return jagg.require(jagg.getModulesDir() + "billing/billing.jag").addPaymentMethod.apply(this, arguments);
    },
    getAllPaymentMethods: function () {
        return jagg.require(jagg.getModulesDir() + "billing/billing.jag").getAllPaymentMethods.apply(this, arguments);
    },
    updateDefaultPaymentMethod: function () {
        return jagg.require(jagg.getModulesDir() + "billing/billing.jag").updateDefaultPaymentMethod.apply(this, arguments);
    },
    removePaymentMethod: function () {
        return jagg.require(jagg.getModulesDir() + "billing/billing.jag").removePaymentMethod.apply(this, arguments);
    },
    extendTrial: function () {
        return jagg.require(jagg.getModulesDir() + "billing/billing.jag").extendTrial.apply(this, arguments);
    },
    getAPICloudUsageDisplayPeriod: function () {
        return jagg.require(jagg.getModulesDir() + "billing/billing.jag").getAPICloudUsageDisplayPeriod.apply(this, arguments);
    },
    verifyEvent: function () {
        return jagg.require(jagg.getModulesDir() + "billing/billing.jag").verifyEvent.apply(this, arguments);
    }

});
%>
