<%
include("/jagg/jagg.jag");
include("/jagg/constants.jag");

var log = new Log("modules.subscriptions.subscriptions.jag");

include("/jagg/constants.jag");

var getWelcomeMsg = function (username) {
    var cloudConfig = jagg.module("util").getJsonFromFile(CLOUD_MGT_CONFIG_FILE);
    var modUserProfile = jagg.module("user/profile");
    var welcomeMsg = cloudConfig.welcomeMsg;
    welcomeMsg = welcomeMsg + " " + modUserProfile.getDisplayName() + "!";
    return welcomeMsg;
};

var getSubscriptionInfo = function (types, username) {
    var modUserManagement = jagg.module("user/management");
    var subscriptionInfo = {};
    var cloudType = DEFAULT_SUBSCRIPTION;
    var roleTypes = [];
    var isSubscribed = false;
    for (var i = 0; i < types.length; i++) {
        if (types[i].id != DEFAULT_SUBSCRIPTION) {
            cloudType = types[i].id;
            roleTypes = types[i].roleTypes;
            if (username != null) {
                if (modUserManagement.hasUserRole(username, ROLE_ADMIN)) {
                    isSubscribed = true;
                } else {
                    for (var j = 0; j < roleTypes.length; j++) {
                        if (modUserManagement.hasUserRole(username, roleTypes[j].roleName)) {
                            isSubscribed = true;
                            break;
                        }
                    }
                }
            }
            subscriptionInfo[cloudType] = isSubscribed;
        }
    }
    return subscriptionInfo;
};

var getBillingTypeInfo = function (types, domainName) {
    var billingTypeInfo = {};
    var sqlDateFormat = jagg.module("util").dateTimeFormatter(MYSQL_DATETIME_FORMAT);
    for (var i = 0; i < types.length; i++) {
        if (types[i].id != DEFAULT_SUBSCRIPTION) {
            var columnName = types[i].id;
            var isCommercial = false;
            if(types[i].serviceType === "commercial"){
                isCommercial = true;
            }
            //Get the type of billing ( Paid, trial or free)
            var cloudBillingDAO = new Packages.org.wso2.carbon.cloud.billing.core.commons.dataaccess.CloudBillingDAO();
            var billingType = JSON.parse(cloudBillingDAO.getTypeForTenantSubscription(columnName, domainName));
            if (billingType.length > 0) {
                billingTypeInfo[columnName] = billingType[0][TYPE_COLUMN];
            } else {
                //As a fail proof assign the billing type to free/commercial based on the service type of the cloud
                var defaultBillingStatus;
                var defaultBillingType;
                var startDate;
                var endDate;
                if (isCommercial) {
                    defaultBillingType = type.TRIAL;
                    defaultBillingStatus = status.INACTIVE;
                    startDate = sqlDateFormat.parse(MYSQL_MIN_DATETIME_STRING);
                    endDate = sqlDateFormat.parse(MYSQL_MIN_DATETIME_STRING);
                } else {
                    defaultBillingType = type.FREE;
                    defaultBillingStatus = status.ACTIVE;
                    startDate = new Packages.java.util.Date();
                    endDate = sqlDateFormat.parse(MYSQL_MAX_DATETIME_STRING);
                }
                billingTypeInfo[columnName] = defaultBillingType;
                try {
                    //Insert default billing type for the missing billing record
                    cloudBillingDAO.insertBillingStatus(domainName, columnName, defaultBillingType,
                        defaultBillingStatus, sqlDateFormat.format(startDate), sqlDateFormat.format(endDate));
                    log.info("Billing Type details were not found for " + columnName + " of tenant: " + domainName +
                        ". Added TYPE: " + defaultBillingType + " and STATUS: " + defaultBillingStatus + " record to billing status table");
                } catch (e) {
                    log.error("Error occurred while inserting billing type information for " + columnName + " of tenant: " + domainName);
                }
            }
            if (log.isDebugEnabled()) {
                log.debug("Billing type" + columnName + ":" + billingTypeInfo[columnName]);
            }
        }
    }
    return billingTypeInfo;
};
%>

