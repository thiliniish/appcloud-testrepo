<%
jagg.module("manager", {
    isEmailUserNameEnabled: function () {
        return jagg.require(jagg.getModulesDir() + "manager/manager.jag").isEmailUserNameEnabled.apply(this, arguments);
    },
    getUserNameFromEmail: function () {
        return jagg.require(jagg.getModulesDir() + "manager/manager.jag").getUserNameFromEmail.apply(this, arguments);
    },
    getUserNamesFromEmails: function () {
        return jagg.require(jagg.getModulesDir() + "manager/manager.jag").getUserNamesFromEmails.apply(this, arguments);
    },
    getTenantAwareUsername: function () {
        return jagg.require(jagg.getModulesDir() + "manager/manager.jag").getTenantAwareUsername.apply(this, arguments);
    },
    getEmailOfUser: function () {
        return jagg.require(jagg.getModulesDir() + "manager/manager.jag").getEmailOfUser.apply(this, arguments);
    },
    getTenantDomain: function () {
        return jagg.require(jagg.getModulesDir() + "manager/manager.jag").getTenantDomain.apply(this, arguments);
    },
    getTenantDisplayName: function () {
        return jagg.require(jagg.getModulesDir() + "manager/manager.jag").getTenantDisplayName.apply(this, arguments);
    },
    getTenantId: function () {
        return jagg.require(jagg.getModulesDir() + "manager/manager.jag").getTenantId.apply(this, arguments);
    },
    getAdminCookie:function () {
        return jagg.require(jagg.getModulesDir() + "manager/manager.jag").getAdminCookie.apply(this, arguments);
    },
    updateAdminCookie:function () {
        return jagg.require(jagg.getModulesDir() + "manager/manager.jag").updateAdminCookie.apply(this, arguments);
    },
    getAdminCookieBySAMLToken:function () {
            return jagg.require(jagg.getModulesDir() + "manager/manager.jag").getAdminCookieBySAMLToken.apply(this, arguments);
    },
    encodeString:function () {
            return jagg.require(jagg.getModulesDir() + "manager/manager.jag").encodeString.apply(this, arguments);
    },
    createDataSource:function () {
        return jagg.require(jagg.getModulesDir() + "manager/manager.jag").createDataSource.apply(this, arguments);
    },
    deleteDatasource:function () {
        return jagg.require(jagg.getModulesDir() + "manager/manager.jag").deleteDatasource.apply(this, arguments);
    },
   getDataSource:function () {
   	return jagg.require(jagg.getModulesDir() + "manager/manager.jag").getDataSource.apply(this, arguments);
    },
   addDataSource:function () {
       	return jagg.require(jagg.getModulesDir() + "manager/manager.jag").addDataSource.apply(this, arguments);
   },
    getBackendCookie:function () {
        return jagg.require(jagg.getModulesDir() + "manager/manager.jag").getBackendCookie.apply(this, arguments);
    }
});
%>
