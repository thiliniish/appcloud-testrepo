<%
include("/jagg/jagg.jag");
include("/jagg/constants.jag");


var log = new Log();
var modManager = jagg.module("manager");
var cloudConfig = jagg.module("util").getJsonFromFile(CLOUD_MGT_CONFIG_FILE);

var CLOUDMGT_SERVICES = cloudConfig.ServerUrls.cloudmgtServices.toString();

function login(userName, password){

    var ws = require('ws');
    var finalResult={};
    try{
        var xhr = new XMLHttpRequest();
        var endPoint = CLOUDMGT_SERVICES + "AuthenticationAdmin";
        xhr.setRequestHeader('SOAPAction', 'urn:login');
        xhr.setRequestHeader('Content-Type', 'text/xml');
        xhr.open("POST", endPoint);
        var payload = '<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/">' +
                '<soapenv:Body>' +
                '<aut:login xmlns:aut="http://authentication.services.core.carbon.wso2.org">' +
                '<aut:username>'+userName+'</aut:username>' +
                '<aut:password>'+password+'</aut:password>' +
                '<aut:remoteAddress>localhost</aut:remoteAddress>' +
                '</aut:login>' +
                '</soapenv:Body>' +
                '</soapenv:Envelope>';
        xhr.send(payload);
        var result = xhr.responseText;

        if (result.indexOf("false") === -1 && result.indexOf("faultstring") === -1) {
            jagg.setUser(userName);
            createTenantInfoObject();
            var cookie = (xhr.getAllResponseHeaders());
            var cookieString = cookie.split(";")[0].split(":")[1];
            if(cookieString!=null){
                cookieString = cookieString.replace(/^\s+|\s+$/g, '');
            }
            finalResult.error="false";
            finalResult.message="User successfully logged in";
            finalResult.username=userName;
            finalResult.cookie=cookieString;
            session.put("LOGGED_IN_USER",userName);
            session.put("LOGGED_IN_USER_EMAIL", jagg.module("manager").getEmailOfUser(userName));
            log.info("User: " + userName + " successfully logged in from Login API.");
            return stringify(finalResult);
        }
        log.warn("Failed login attempt by user: " + userName + " for Login API.");
        finalResult.error="true";
        finalResult.message="Authentication failure";
        return stringify(finalResult);
    } catch(e){
        log.error("Error while login from Login API for user: " + userName + "\n" + e.message());
        finalResult.error="true";
        finalResult.message="Internal Error Occured";
        return stringify(finalResult);
    }

}

function validatePassword(userName, password){
    log.info("Password validating...");
    var user = modManager.getTenantAwareUsername(userName);
    var userPass = jagg.module("util").escapeSpecialCharsXML(password);
    var ws = require('ws');
    var finalResult={};
    try{
        var xhr = new XMLHttpRequest();
        var endPoint = CLOUDMGT_SERVICES + "AuthenticationAdmin";
        xhr.setRequestHeader('SOAPAction', 'urn:login');
        xhr.setRequestHeader('Content-Type', 'text/xml');
        xhr.open("POST", endPoint);
        var payload = '<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/">' +
                '<soapenv:Body>' +
                '<aut:login xmlns:aut="http://authentication.services.core.carbon.wso2.org">' +
                '<aut:username>'+user+'</aut:username>' +
                '<aut:password>'+userPass+'</aut:password>' +
                '<aut:remoteAddress>localhost</aut:remoteAddress>' +
                '</aut:login>' +
                '</soapenv:Body>' +
                '</soapenv:Envelope>';
        xhr.send(payload);
        var result = xhr.responseText;
        if (result.indexOf("false") === -1 && result.indexOf("faultstring") === -1) {
            return true;
        }
        return false;
    } catch(e){
        log.error("Error while validating password: "+ e.message());
        return false;
    }

}

function logout(){
    var log = new Log();
    var username = jagg.getUser();
    var finalResult={};

    if(username!=null){
        jagg.setUser(null);
        finalResult.error="false";
        finalResult.message="User successfully logged out";
        if(log.isDebugEnabled()) {
            log.debug("User logged out successfully" + username);
        }
        return stringify(finalResult);
    }
    finalResult.error="true";
    finalResult.message="User already logged out";
    return stringify(finalResult);

}

function createTenantInfoObject() {
    if (session.get("TENANT_INFO") == null) {
        var modManager = jagg.module("manager");
        var tenantInfo = {};
        tenantInfo.tenantDomain = modManager.getTenantDomain();
        tenantInfo.tenantId = modManager.getTenantId();
        session.put("TENANT_INFO", tenantInfo);
    }
}

var loginWithSAMLToken = function (token) {
    var security =require("sso");
    var SSO_NAME =  cloudConfig.SSORelyingParty.name;
    var CLOUDMGT_SERVICES = cloudConfig.ServerUrls.cloudmgtServices.toString();
    var ssoRelyingParty = new security.SSORelyingParty(SSO_NAME);
    var encodedToken = ssoRelyingParty.xmlEncode(token);
    var xhr = new XMLHttpRequest();
    var endPoint = CLOUDMGT_SERVICES + "SAML2SSOAuthenticationService";
    xhr.open("POST", endPoint);
    var payload = '<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" ' +
            'xmlns:sso="http://sso.saml2.authenticator.identity.carbon.wso2.org" ' +
            'xmlns:xsd="http://dto.sso.saml2.authenticator.identity.carbon.wso2.org/xsd">' +
            '<soap:Body>' +
            '<sso:login>' +
            '<sso:authDto>' +
            '<xsd:response>' + encodedToken + '</xsd:response>' +
            '</sso:authDto>' +
            '</sso:login>' +
            '</soap:Body>' +
            '</soap:Envelope>';
    xhr.setRequestHeader('SOAPAction','urn:login');
    xhr.setRequestHeader('Content-Type','application/soap+xml');
    xhr.send(payload);
    var result = xhr.responseText;

    var finalResult={};
    if (result.indexOf("false") === -1 && result.indexOf("faultstring") === -1) {
        var cookieString = xhr.getResponseHeader("Set-Cookie");
        var userName = ssoRelyingParty.getSAMLResponseNameId(token);
        jagg.setUser(userName);
        log.info("User :"+userName +" is successfully logged in with saml token");
        var email = modManager.getEmailOfUser(userName);
        var tenantDomain = modManager.getTenantDomain();
        session.put("LOGGED_IN_USER", userName);
        session.put("LOGGED_IN_USER_EMAIL", email);
        session.put("LOGGED_IN_USER_TENANT_DOMAIN", tenantDomain);
        createTenantInfoObject();
        finalResult.error=false;
        finalResult.message="User successfully logged in";
        finalResult.username=userName;
        finalResult.cookie=cookieString;
    } else {
        log.warn("Error occurred while login with saml token");
        log.warn("Authentication Server response status:"+xhr.status+". responseText:"+ xhr.responseText);
        finalResult.error=true;
        finalResult.message="Authentication failure";
    }
    return finalResult;
};

%>

%>
