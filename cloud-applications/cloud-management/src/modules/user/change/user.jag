<%
include("/jagg/jagg.jag");
include("/jagg/constants.jag");

var log = new Log("modules/user/change/user.jag");
var modManager = jagg.module("manager");
var carbon = require('carbon');
var server = carbon.server;
var multitenancy = carbon.multitenancy;

var cloudConfig = jagg.module("util").getJsonFromFile(CLOUD_MGT_CONFIG_FILE);

var IS_URL =  cloudConfig.ServerUrls.identity.toString();

var userName =  session.get("LOGGED_IN_USER");


var changePassword = function(oldPassword, newPassword) {
    var user = jagg.module("util").getDomainLessUserName(userName);
    var tenantDomain=modManager.getTenantDomain();
      var userEmail = session.get("LOGGED_IN_USER_EMAIL");
    var context=multitenancy.getPrivilegedCarbonContext();
    var tenantManager = multitenancy.getTenantManager();
    try {
        var tenantId = tenantManager.getTenantId(tenantDomain);
        context.startTenantFlow();
        context.getThreadLocalCarbonContext().setTenantId(tenantManager.getTenantId(tenantDomain));
        context.getThreadLocalCarbonContext().setTenantDomain(tenantDomain);
        var realmService = server.osgiService('org.wso2.carbon.user.core.service.RealmService');
        var realm = realmService.getTenantUserRealm(tenantId);
        var userStoreManager=realm.getUserStoreManager();
        var result=userStoreManager.updateCredential(user,newPassword,oldPassword);
        log.info("Sucessfully changed password");
        log.info("changePassword "+userEmail);
        jagg.module("util").changeOTUserPass(userEmail,newPassword);
        return true;
    }catch (e){
        log.error("Error while changing password for the user " + userName + e.message);
        throw "Error while changing password for the user " + userName + e.message;
    }finally{
        context.endTenantFlow();
    }
        
    }

var updatePasswordWithUserInput = function(userName,email, newPassword,confirmationKey) {
    log.info("Updating user password by Password reset");
    var ws = require('ws');
    var request = new ws.WSRequest();
    var options = new Array();
    options.useSOAP = 1.1;
    options.timeout = 1000000;
    options.action = "urn:updatePassword";
    options["HTTPHeaders"] = [
        { name : "Cookie", value :modManager.getAdminCookie(IS_URL) }
    ];
    var payload = '<updatePassword xmlns="http://services.mgt.identity.carbon.wso2.org"><username>'+userName+'</username><confirmationCode>'+confirmationKey+'</confirmationCode><newPassword>'+jagg.module("util").escapeSpecialCharsXML(newPassword)+'</newPassword></updatePassword>';
    var result;
    try {
        var endPoint = IS_URL + "UserInformationRecoveryService";
        request.open(options,endPoint, false);
        request.send(payload);
        result=request.responseE4X;
        var entry = result.*::["return"];
        var error = entry.*::error.text();
        var verified = entry.*::verified.text();
        if (verified == true) {
            log.info("Password reset successful for user " + userName);
            jagg.module("util").changeOTUserPass(email,newPassword);
            return "successful";
        } else {
            log.error(error);
            throw error;
        }
    } catch (e) {
        log.error("Error while updating password while resetting password \n" + e.message);
        throw "Error while updating password while resetting password \n" + e.message;
    }
};


%>

