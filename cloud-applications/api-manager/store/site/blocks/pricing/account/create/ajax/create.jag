<%
include("/jagg/jagg.jag");
include("/jagg/cloud/constants.jag");

var log = new Log("site/block/pricing/account/create/ajax/create.jag");
var serviceId = session.get("SERVICE_ID");
var ratePlans = session.get("RATE_PLANS");
var msg = require("/site/conf/ui-messages.jag");
var user = jagg.getUser();
//var accountId = request.getParameter("accountId");
(function () {
	var mod,result,
	action = request.getParameter("action"),
	site = require("/site/conf/site.json");
	mod = jagg.module("pricing");
    log.info("Action log: "+action);
	if (action == "createAccount") {
		var accountData = {
		};
		var metaData = {
		};

		accountData.firstName = request.getParameter("firstName");
		accountData.lastName = request.getParameter("lastName");
		accountData.address1 = request.getParameter("address1");
		accountData.address2 = request.getParameter("address2");
		accountData.city = request.getParameter("city");
		accountData.state = request.getParameter("state");
		accountData.zipCode = request.getParameter("zipCode");
		accountData.country = request.getParameter("country");
        accountData.workEmail = request.getParameter("email");

		metaData.refId = request.getParameter("refId");
		metaData.signature = request.getParameter("signature");
		metaData.field_passthrough1 = request.getParameter("field_passthrough1");
		metaData.serviceId = request.getParameter("serviceId");
		metaData.productRatePlanId = request.getParameter("productRatePlanId");
		responseFrom = request.getParameter("responseFrom");
		var workFlowRefId = request.getParameter("workFlowRefId");
		try {
				result = mod.createAccount(accountData, metaData, workFlowRefId);
			if (result != null) {
				if (result.error) {
					var message = result.message;
					if (message != null) {
						message = message.replace(message.split(":")[0] + ":", "");
					} else {
						var username = user.username;
						message = msg.error.authError(action, username);
					}
					obj = {
						error:true,
						message:message
					};
				} else {
					obj = {
						error:false,
						status:result.status
					}
				}
				print(obj);
			} else {
				var tenantDomain = (session.get("TENANT_INFO")).tenantDomain;
				log.error("Created zuora account Id cannot be null for tenant: " + tenantDomain);
				throw new Error("Created zuora account Id cannot be null for tenant: " + tenantDomain);
			}
		} catch (e) {
			if(EDIT_USER_INFO == responseFrom){
				throw new Error("Error while updating contact info: " + e);
			}if(IS_FROM_CHANGE_PLAN == responseFrom){
				throw new Error("Error while changing billing account: " + e);
			}else {
			    throw new Error("Billing account creation failure: " + e);
			}
		}
	}  else {
		throw new Error("No action specified");
	}
}());
%>